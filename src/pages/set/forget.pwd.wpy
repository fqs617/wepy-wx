<template>
  <view class="container login">
    <view class="content">
      <view class="li">
        <view class="input"><input placeholder="请输入手机号" type="number" maxlength = '11' bindinput="changePhone"/></view>
      </view>
      <view class="li">
        <input class="input codes" placeholder="请输入验证码" maxlength='6' bindinput="changeCode"/>
        <view class="code"  class="btn" @tap="sendCode">{{ codeText }}</view>
      </view>
  </view>
    <view class="button" @tap="doLogin">登录</view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import LoginService from '@/service/login.service'

  export default class Login extends wepy.page {
    config = {
      navigationBarTitleText: ''
    }
    components = {
      // 引用组件
    }
    data = {
      email: '',
      phone: '',
      code: '',
      codeText: '获取验证码',
      emailReg: /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\.[a-zA-Z0-9_-]{2,3}){1,2})$/,
      phoneReg: /^1[34578]\d{9}$/,
      type: 1,
      isSend: false,
      time: null
    }
    computed = {
      // sendDisabled() {
      //   if (this.isSend) {
      //     return true
      //   }
      //   return this.phoneOrEmailisOk()
      // }
    }
    async onLoad() {
      this.LoginService = new LoginService()
    }
    methods = {
      changePhone (e) {
        this.phone = e.detail.value
      },
      changeCode (e) {
        this.code = e.detail.value
      },
      phoneOrEmailisOk() {
        if (this.type === 1) {
          return this.phoneReg.test(this.phone) !== true
        } else if (this.type === 2) {
          return this.emailReg.test(this.email) !== true
        }
      },
      async goLogin () {
        this.LoginService = new LoginService()
        let res = await this.LoginService.doLogin()
        console.log(res)
        this.info = res
        wx.setStorage({
          key: 'userHouseInfo',
          data: res
        })
        this.$apply()
      },
      async sendCode() {
        console.log(this.type)
        if (this.type === 1) {
          if (this.phone.length <= 0) {
            wx.showToast({ title: '请输入手机号', icon: 'none', duration: 3000 })
            return
          }
          if (this.phoneReg.test(this.phone) !== true) {
            wx.showToast({ title: '手机号有误请重新输入', icon: 'none', duration: 3000 })
            return
          }
        } else if (this.type === 2) {
          if (this.email.length <= 0) {
            wx.showToast({ title: '请输入邮箱号', icon: 'none', duration: 3000 })
            return
          }
          if (this.emailReg.test(this.email) !== true) {
            wx.showToast({ title: '邮箱号有误请重新输入', icon: 'none', duration: 3000 })
            return
          }
        }
        let params = {
          type: this.type
        }
        if (this.type === 1) {
          params.phone = this.phone
        } else if (this.type === 2) {
          params.email = this.email
        }
        wx.showToast({ title: '验证码已发送手机', icon: 'succeed', duration: 3000 })
        await this.LoginService.sendCode(params)
        this.codeText = 60
        this.isSend = true
        this.time = setInterval(() => {
          this.codeText--
          if (this.codeText < 0) {
            this.isSend = false
            window.clearInterval(this.time)
            this.codeText = '获取验证码'
          }
        }, 1000)
      }
    }
  }
</script>
<style lang="less">
.login{
  .button{
    margin-top: 100rpx;
  }
  .content{
    width: 100%;
    margin-top: 20rpx;
    border-top: 1rpx solid #ccc;
    border-bottom: 1rpx solid #ccc;
    padding: 0 10rpx;
    background: #fff;
    .li{
      height: 90rpx;
      border-bottom: 1rpx solid #ccc;
      position: relative;
      // padding: 25rpx 0;
      line-height: 40rpx;
      input{
        width: 100%;
        height: 40rpx;
        line-height: 40rpx;
      }
      &:last-child{
        border-bottom: none;
      }
      .text{
        position: absolute;
        left: 0;
        top: 25rpx;
        font-size: 30rpx;
        color: #CCCCCC;
      }
      .input{
        position: absolute;
        left: 50rpx;
        top: 25rpx;
        font-size: 30rpx;
        color: #222;
      }
      .codes{
        width: 60%;
      }
      .code{
        width: 200rpx;
        height: 100%;
        position: absolute;
        top: 0rpx;
        color: #222;
        right: 28rpx;
        text-align: center;
        border-radius: 0;
      }
      .btn{
        position: absolute;
        top: 0rpx;
        right: 10rpx;
        width: 200rpx;
        height: 100%;
        background: #FFDE3B;
        outline: none;
        border: none;
        border-radius: 0;
        font-size: 28rpx;
        line-height: 100rpx;
        text-align: center;
      }
    }
  }
}
</style>
